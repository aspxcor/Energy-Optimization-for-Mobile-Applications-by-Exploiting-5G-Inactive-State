import datetime
import time

import numpy as np
import os
import re
import pandas as pd
import xlwt

# Usage: output an excel for STRACE: hour, minute, second, millisecond, command,
# paras, return, duration

app = '/qqmusic'

app_uid = 'a166'
port_num = '14584'

def transpose(matrix):
    new_matrix = []
    for i in range(len(matrix[0])):
        matrix1 = []
        for j in range(len(matrix)):
            matrix1.append(matrix[j][i])
        new_matrix.append(matrix1)
    return new_matrix

features_final_path = "E:/Emnets/5G/powerMonitor/ZTE/data"+app+"/"
feature_dirs = []
trace_nums = []
for file in os.listdir(features_final_path):
    # print(file)
    file_path = os.path.join(features_final_path,file)
    if os.path.isdir(file_path) and ("trace" in file):
        feature_dirs.append(file_path)
        temp_pos = file.rindex('e')
        trace_nums.append(file[temp_pos+1:])
print(trace_nums)

for trace_num in trace_nums:
    # trace_num = '100'
    if (110>=int(trace_num)>=86):
        port_num = '27505'
    elif (120>=int(trace_num)>=111):
        port_num = '14470'
    else:
        port_num = '14584'
    print(trace_num)
    store_path = "E:/Emnets/5G/powerMonitor/ZTE/data"+app+"/trace" + str(trace_num) + "/"
    file_path = store_path+'logcat_'+ trace_num +'.log'

    raw_info = []

    with open(file_path, "r", encoding='UTF-8') as f:
        for line in f.readlines():
            line = line.strip('\n')  # 去掉列表中每一个元素的换行符
            raw_info.append(line)

    info_leng = len(raw_info)
    print(info_leng)
    # hour_list = np.zeros(int(info_leng/2))
    # minute_list = np.zeros(int(info_leng/2))
    # second_list = np.zeros(int(info_leng/2))
    # millisecond_list = np.zeros(int(info_leng/2))
    useful_info = []
    list_all = []
    for index in range(info_leng):
        if port_num in raw_info[index]:
            useful_info.append(raw_info[index])
    dataframe = pd.DataFrame(useful_info)
    # if not os.path.exists(store_path + 'battery_'+trace_num+'.csv'):
    #     dataframe.to_csv(store_path + 'battery_'+trace_num+'.csv')
    dataframe.to_csv(store_path + 'logcat_mid_' + trace_num + '.csv')
    # input()
    useful_info_length = len(useful_info)

    for index in range(useful_info_length):
        # temp_info:
        # time, pss_total, pri_dirty, pri_clean, swap_dirty, heap_size, heap_alloc, heap_free
        temp_info = []
        useful_info[index] = re.sub(' +', ' ', useful_info[index])
        [date, time2, remain1] = filter(None,useful_info[index].split(" ", 2))
        # print(remain1)
        tss1 = '2021-'+date+' '+time2
        tss2 = tss1.split('.')[0]
        # tss2 = tss1
        # print(tss2)
        timeArray = time.strptime(tss2, "%Y-%m-%d %H:%M:%S")
        # print(timeArray)
        timeStamp = int(time.mktime(timeArray))
        timeStamp2 = str(timeStamp)+'.'+tss1.split('.')[1]
        # print(timeStamp2)
        remain1 = str(remain1)
        # print(remain1)
        remain1 = re.sub(' +', ' ',remain1)
        # print(remain1)
        if len(list(filter(None,remain1.split(' ')))) == 4:
            [splited, splited1, splited2, splited3] = filter(None, remain1.split(' ', 3))
            splited4 = ""
        else:
            [splited,splited1,splited2,splited3,splited4] = filter(None,remain1.split(' ',4))
        # print(splited,splited1,splited2,splited3)
        pid = splited
        tid = splited1
        level = splited2
        app_n = splited3[:-1]
        content = splited4
        # input()
        # print(pid,tid,level, app)
        # print(content)
        temp_info.append(timeStamp2)
        temp_info.append(pid)
        temp_info.append(tid)
        temp_info.append(level)
        temp_info.append(app_n)
        temp_info.append(content)
        list_all.append(temp_info)
        # input()
    print(np.shape(list_all))
    # input()
    dataframe = pd.DataFrame(list_all)
    # if not os.path.exists(store_path + 'port_PID'+ port_num +'_'+trace_num+'.csv'):
    #     dataframe.to_csv(store_path + 'port_PID'+ port_num +'_'+trace_num+'.csv')
    dataframe.to_csv(store_path + 'logcat_' + trace_num + '.csv',encoding='utf_8_sig')
    # input()
