from scapy.all import *
import json
import numpy as np
import datetime
import pandas as pd
import math
from collections import Counter
import rpy2.robjects as robjects

# trace_num = '1'
# port_num = '18026'
# store_path = 'E:\\Emnets\\5G\\powerMonitor\\ZTE\data\\trace'+ trace_num+ '\\'
# file_path_features = store_path + 'features_'+trace_num+'.csv'

store_path = 'E:\\Emnets\\5G\\powerMonitor\\ZTE\data\\'
file_path_features = store_path+'final_features_all_feature.csv'
df_feature = pd.read_csv(file_path_features)

data_feature = df_feature.loc[:,:].values
col = np.shape(data_feature)[1]

data_features = data_feature[:,1:col-1]
labels = data_feature[:,col-1]
print(data_features)
print(np.shape(data_features))
print(labels)
print(np.shape(labels))
# input()

r_script='''
library(C50)
library(export)
library(pROC)
xls_1 <- read.table("E:/Emnets/5G/powerMonitor/ZTE/data/final_features_all_feature_balanced.csv",sep=',')
str(xls_1)
xls_use <- xls_1[2:nrow(xls_1),2:ncol(xls_1)]
str(xls_use)
xls_use[,ncol(xls_use)] <- as.factor(xls_use[,ncol(xls_use)])
str(xls_use)

set.seed(123)
train_sub = sample(nrow(xls_use),7/10*nrow(xls_use))
train_data = xls_use[train_sub,]
test_data = xls_use[-train_sub,]

treec50<-C5.0Control(subset =F,CF=0.25,winnow=F,noGlobalPruning=F)
model_C50 <- C5.0(V80 ~., data=train_data, control=treec50)
# model_C50 <- C5.0(V80 ~., data=train_data, control=treec50, probability=TRUE)
# model_C50 <- C5.0(V48 ~., data=train_data, control=treec50, trials = 10)
# model_C50 <- C5.0(V48 ~., data=train_data, control=treec50, rules = T)

summary(model_C50)
plot(model_C50, main = paste("C50 withoutrules\n(", Sys.time(),"-linyx)", sep = " "))
graph2png(file = "C50_withoutrules_more_feature.png")
# save(file="mygraph.png", plot=myplot)

C50_predicted = predict(model_C50, newdata=test_data[,1:(ncol(xls_use)-1)])
table(test_data[,ncol(xls_use)],C50_predicted,dnn=c("Truth","Predicted"))
# auc1= auc(test_data[,ncol(xls_use)],C50_predicted)
'''

value = robjects.r(r_script)
print("value:", value)

