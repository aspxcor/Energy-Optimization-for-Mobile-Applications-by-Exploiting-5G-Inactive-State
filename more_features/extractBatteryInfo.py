import datetime

import numpy as np
import os
import re
import pandas as pd
import xlwt

# Usage: output an excel for STRACE: hour, minute, second, millisecond, command,
# paras, return, duration

app = '/qqmusic'
app_uid = 'Uid u0a166'

def transpose(matrix):
    new_matrix = []
    for i in range(len(matrix[0])):
        matrix1 = []
        for j in range(len(matrix)):
            matrix1.append(matrix[j][i])
        new_matrix.append(matrix1)
    return new_matrix

features_final_path = "E:/Emnets/5G/powerMonitor/ZTE/data"+app+"/"
feature_dirs = []
trace_nums = []
for file in os.listdir(features_final_path):
    # print(file)
    file_path = os.path.join(features_final_path,file)
    if os.path.isdir(file_path) and ("trace" in file):
        feature_dirs.append(file_path)
        temp_pos = file.rindex('e')
        trace_nums.append(file[temp_pos+1:])
print(trace_nums)

for trace_num in trace_nums:
    # trace_num = '100'
    print(trace_num)
    store_path = "E:/Emnets/5G/powerMonitor/ZTE/data"+app+"/trace" + str(trace_num) + "/"
    file_path = store_path+'battery_full_'+ trace_num +'.log'

    raw_info = []

    with open(file_path, "r", encoding='utf-8') as f:
        for line in f.readlines():
            line = line.strip('\n')  # 去掉列表中每一个元素的换行符
            raw_info.append(line)

    info_leng = len(raw_info)
    print(info_leng)
    # hour_list = np.zeros(int(info_leng/2))
    # minute_list = np.zeros(int(info_leng/2))
    # second_list = np.zeros(int(info_leng/2))
    # millisecond_list = np.zeros(int(info_leng/2))
    useful_info = []
    list_all = []
    for index in range(info_leng):
        if app_uid in raw_info[index] or "time:161" in raw_info[index]:
            useful_info.append(raw_info[index])
    dataframe = pd.DataFrame(useful_info)
    # if not os.path.exists(store_path + 'battery_'+trace_num+'.csv'):
    #     dataframe.to_csv(store_path + 'battery_'+trace_num+'.csv')
    dataframe.to_csv(store_path + 'battery_mid_' + trace_num + '.csv')
    # input()
    useful_info_length = len(useful_info)
    temp_info = np.zeros(12)
    for index in range(useful_info_length):
        # temp_info:
        # time, battery, cpu, radio, sensor, wake, include, proportional, screen, ms_per_pkt, num_pkt, t_trans

        if "smearing" in useful_info[index]:
            begin = useful_info[index].index(":")
            end = useful_info[index].index("(")
            temp_info[1] = useful_info[index][begin + 2:end - 1]
            end2 = useful_info[index].index(")")
            compo_list = useful_info[index][end+2:end2-1].split(" ")
            # print(compo_list)
            for compos in compo_list:
                [compo,bat] = compos.split("=")
                if compo == "cpu":
                    temp_info[2] = bat
                elif compo == "radio":
                    temp_info[3] = bat
                elif compo == "sensor":
                    temp_info[4] = bat
                elif compo == "wake":
                    temp_info[5] = bat
            begin2 = useful_info[index].rindex(":")
            end3 = useful_info[index].rindex("(")
            temp_info[6] = useful_info[index][begin2 + 2:end3 - 1]
            end4 = useful_info[index].rindex(")")
            smear_list = useful_info[index][end3+2:end4-1].split(" ")
            for smears in smear_list:
                [smear,bat] = smears.split("=")
                if smear == "proportional":
                    temp_info[7] = bat
                elif smear == "screen":
                    temp_info[8] = bat
            if(index+1 == useful_info_length): continue
            if "packets over" in useful_info[index+1]:
                begin3 = useful_info[index+1].index(":")
                end5 = useful_info[index+1].index("(")
                temp_info[9] = useful_info[index+1][begin3 + 2:end5 - 1]
                end6 = useful_info[index+1].index("packets")
                temp_info[10] = useful_info[index+1][end5+1:end6-1]
                begin4 = useful_info[index+1].index("over")
                end7 = useful_info[index+1].index("ms")
                if "s" in useful_info[index+1][begin4+5:end7]:
                    second_pos = useful_info[index+1][begin4+5:end7].index("s")
                    temp_info[11] = int(useful_info[index+1][begin4+5:end7][:second_pos])*1000+int(useful_info[index+1][begin4+5:end7][second_pos+2:])
                    # print(temp_info)
                    # input()
                else:
                    temp_info[11] = useful_info[index+1][begin4+5:end7]
                # print(temp_info)
                # input()
        if "time:" in useful_info[index]:
            temp_pos = useful_info[index].index(":")
            temp_time = useful_info[index][temp_pos+1:]
            temp_info[0] = temp_time
            list_all.append(temp_info)
            temp_info = np.zeros(12)
        # print(temp_info)
        # input()
    print(np.shape(list_all))
    # input()
    dataframe = pd.DataFrame(list_all)
    # if not os.path.exists(store_path + 'port_PID'+ port_num +'_'+trace_num+'.csv'):
    #     dataframe.to_csv(store_path + 'port_PID'+ port_num +'_'+trace_num+'.csv')
    dataframe.to_csv(store_path + 'battery_' + trace_num + '.csv')
    # input()
